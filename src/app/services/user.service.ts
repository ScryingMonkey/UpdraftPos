import { Injectable } from '@angular/core';
import { BehaviorSubject } from "rxjs/Rx";
import { Observable} from 'rxjs/observable';
import { Subject }    from 'rxjs/Subject';
import { AngularFireDatabase } from 'angularfire2/database';
import { User } from '../models/index';

//https://github.com/angular/angularfire2/blob/master/docs/rtdb/lists.md

// manages user object...
// user {
//   key: generated by model from email
//   displayname: pulled from authstate
//   email: pulled from authstate
//   userType: defines what user can see
// }

@Injectable()
export class UserService {
  public user: BehaviorSubject<any> = BehaviorSubject.create(new User());

  constructor(_afdb: AngularFireDatabase) {

   }

  updateUser(authstate){
    let u = {
      displayname: authstate.displayname,
      email: authstate.email,
      usertype: "user"
    };
    this.user.next(u);
    //TODO: Pull user from userdb.  Update user object.
    //getUserFromDB(authstate.displayname);
    //https://github.com/angular/angularfire2/blob/master/docs/rtdb/querying-lists.md
    console.log('...updating user from db');
    console.dir(this.user.getValue());
  }

  get user$(){ return this.user.asObservable()}
  get showUser() {
    console.log('..._u.showUser:user');
    console.dir(this.user.getValue());
    return JSON.stringify(this.user.getValue()); 
  }
}
